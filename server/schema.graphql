type Query {
  me: User
  algSet(id: ID!): AlgSet
  algSets: [AlgSet!]!
}

type Mutation {
  createAlgSet(name: String!, secret: Boolean!, algs: [String!]): AlgSet
  updateAlgSet(id: ID!, name: String, secret: Boolean, algs: [String!]): AlgSet
  deleteAlgSet(id: ID!): AlgSet
  addAlgToAlgSet(id: ID!, alg: String!): AlgSet
  removeAlgFromAlgSet(id: ID!, alg: String!): AlgSet
  starAlgSet(id: ID!): AlgSet # Idea: return user instead? (maybe this could automatically update apollo cache)
  unstarAlgSet(id: ID!): AlgSet
}

type User {
  id: ID!
  # WCA attributes
  wcaUserId: Int!
  wcaId: String
  name: String!
  avatar: Avatar!
  # Additional attributes
  algSets: [AlgSet!]!
  starredAlgSets: [AlgSet!]!
}

type Avatar {
  url: String
  thumbUrl: String
}

type AlgSet {
  id: ID!
  name: String!
  secret: Boolean!
  createdBy: User!
  algs: [String!]!
  stargazerIds: [ID!]!
}
